attribute vec3 position;
uniform sampler2D heightSampler;
uniform vec4 heightMapTransform;
uniform vec3 terrainCameraPosition;
uniform float terrainResolution;
varying float morph;
varying vec2 offset;

#include "transform.glsl"


void main(){
    transform(vec3(position.x, 0.0, position.z));
    float lod = abs(distance(worldPosition, terrainCameraPosition))/heightMapTransform.w;
    morph = clamp((lod-0.9)*10.0, 0.0, 1.0);
    vec2 uneven = fract(position.xz*terrainResolution*0.5)*2.0;
    vec2 morphedPosition = position.xz - uneven*(1.0/terrainResolution)*morph;
    offset = uneven*morph;
    vec2 uv = morphedPosition*heightMapTransform.z+heightMapTransform.xy;
    vec4 heightSample = texture2D(heightSampler, uv);

    transform(vec3(morphedPosition.x, heightSample.r, morphedPosition.y));
}
